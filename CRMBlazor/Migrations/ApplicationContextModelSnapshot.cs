// <auto-generated />
using System;
using CRMBlazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CRMBlazor.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CRMBlazor.Models.AdvertisingSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AdvertisingSources");
                });

            modelBuilder.Entity("CRMBlazor.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("CRMBlazor.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvId")
                        .HasColumnType("integer");

                    b.Property<int>("Area")
                        .HasColumnType("integer");

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Notify")
                        .HasColumnType("boolean");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("PricePerMeter")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegistredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StageId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AdvId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("StageId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CRMBlazor.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CRMBlazor.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("CRMBlazor.Models.Statistics.AdvByJobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertiseStatatisticsByJobTypesId")
                        .HasColumnType("integer");

                    b.Property<int>("Contacts")
                        .HasColumnType("integer");

                    b.Property<int>("Expense")
                        .HasColumnType("integer");

                    b.Property<int>("Sales")
                        .HasColumnType("integer");

                    b.Property<int>("SalesCount")
                        .HasColumnType("integer");

                    b.Property<int>("ShowTimes")
                        .HasColumnType("integer");

                    b.Property<int>("Turnover")
                        .HasColumnType("integer");

                    b.Property<int>("Views")
                        .HasColumnType("integer");

                    b.Property<int>("jobTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdvertiseStatatisticsByJobTypesId");

                    b.HasIndex("jobTypeId");

                    b.ToTable("AdvByJobType");
                });

            modelBuilder.Entity("CRMBlazor.Models.Statistics.AdvertiseStatatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactCost")
                        .HasColumnType("integer");

                    b.Property<int>("Contacts")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Expense")
                        .HasColumnType("integer");

                    b.Property<int>("Sales")
                        .HasColumnType("integer");

                    b.Property<int>("SalesCount")
                        .HasColumnType("integer");

                    b.Property<int>("ShowTimes")
                        .HasColumnType("integer");

                    b.Property<int>("Turnover")
                        .HasColumnType("integer");

                    b.Property<int>("Views")
                        .HasColumnType("integer");

                    b.Property<int>("advSourceId")
                        .HasColumnType("integer");

                    b.Property<int>("jobTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("advSourceId");

                    b.HasIndex("jobTypeId");

                    b.ToTable("AdvStats");
                });

            modelBuilder.Entity("CRMBlazor.Models.Statistics.AdvertiseStatatisticsByJobTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("advSourceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("advSourceId");

                    b.ToTable("AdvStatsByJob");
                });

            modelBuilder.Entity("CRMBlazor.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRMBlazor.Models.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("NotifyDate")
                        .HasColumnType("date");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("CRMBlazor.Models.Order", b =>
                {
                    b.HasOne("CRMBlazor.Models.AdvertisingSource", "Advertise")
                        .WithMany()
                        .HasForeignKey("AdvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMBlazor.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMBlazor.Models.JobType", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMBlazor.Models.Stage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertise");

                    b.Navigation("Author");

                    b.Navigation("JobType");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("CRMBlazor.Models.Statistics.AdvByJobType", b =>
                {
                    b.HasOne("CRMBlazor.Models.Statistics.AdvertiseStatatisticsByJobTypes", null)
                        .WithMany("AdvByJobTypes")
                        .HasForeignKey("AdvertiseStatatisticsByJobTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMBlazor.Models.JobType", "jobType")
                        .WithMany()
                        .HasForeignKey("jobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jobType");
                });

            modelBuilder.Entity("CRMBlazor.Models.Statistics.AdvertiseStatatistics", b =>
                {
                    b.HasOne("CRMBlazor.Models.AdvertisingSource", "advSource")
                        .WithMany()
                        .HasForeignKey("advSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMBlazor.Models.JobType", "jobType")
                        .WithMany()
                        .HasForeignKey("jobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("advSource");

                    b.Navigation("jobType");
                });

            modelBuilder.Entity("CRMBlazor.Models.Statistics.AdvertiseStatatisticsByJobTypes", b =>
                {
                    b.HasOne("CRMBlazor.Models.AdvertisingSource", "advSource")
                        .WithMany()
                        .HasForeignKey("advSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("advSource");
                });

            modelBuilder.Entity("CRMBlazor.Models.User", b =>
                {
                    b.HasOne("CRMBlazor.Models.Role", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("CRMBlazor.Models.UserTask", b =>
                {
                    b.HasOne("CRMBlazor.Models.Order", null)
                        .WithMany("UserTasks")
                        .HasForeignKey("OrderId");

                    b.HasOne("CRMBlazor.Models.User", null)
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CRMBlazor.Models.Order", b =>
                {
                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("CRMBlazor.Models.Statistics.AdvertiseStatatisticsByJobTypes", b =>
                {
                    b.Navigation("AdvByJobTypes");
                });

            modelBuilder.Entity("CRMBlazor.Models.User", b =>
                {
                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
